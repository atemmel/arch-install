# Set keyboard layout
loadkeys i386/qwerty/sv-latin1.map.gz

# Check internet status
ping google.com
# If the ping is succesful, you may proceed
# If you need a wireless connection, use networkmanager for the time being

# Check drives
lsblk

# Partition drive(s)
cfdisk /dev/sdx
# Where x is replaced by the device to partition

# Choose gpt for hdd > 2TB or if using UEFI, else use DOS
# Src: https://unix.stackexchange.com/questions/235467/arch-linux-cfdisk-asking-for-disk-label-type

# Select free space, create partitions as needed
# Remember, don't do swaps kids
# You need at least one primary partition with the bootable flag and type set to Linux
# When satisfied, press write, type yes and then exit cfdisk
# Repeat this process for all drives you wish to partition

# Check drives again, sdx1 should now appear
lsblk

# Create file systems
mkfs.ext4 /dev/sdxy
# Where x is replaced by the device, and y is replaced by the partition number

# Create and enable swap (if appropriate)
mkswap /dev/sdxy
swapon /dev/sdxy

# Mount drive
mount /dev/sdxy /mnt

# Run installation script
pacstrap -i /mnt base base-devel
# Select systemd-resolvconf if you get the option to do so

# Go and make some chocolate, this might take a while

# Generate file system table
genfstab -U /mnt >> /mnt/etc/fstab

# Change root into the new linux installation
arch-chroot /mnt /bin/bash
# Your prompt should now look a bit different

# Install vim with added bloat, completion for bash and git
pacman -S neovim bash-completition git

# Enable your locale(s) of choice
nvim /etc/locale.gen
# Uncomment the locale(s) you want to enable
# My locales include:
# sv_SE.UTF8 UTF-8
# en_GB.UTF8 UTF-8

# Then generate them
locale-gen
# Set your primary language
echo LANG=en_GB.UTF8 > /etc/locale.conf
export LANG=en_GB.UTF8

# Find your language code
find /usr/share/kbd/keymaps/ type f
# Alternatively, if you know what to look for
find /usr/share/kbd/keymaps/ type f | grep "searchterm"
# Make a mental note of it
# Open vconsole.conf
nvim /etc/vconsole.conf
# Add your keymap
KEYMAP=sv-latin1

# Remove localtime
rm /etc/localtime
# Symlink your desired timezone instead
ln -s /usr/share/zoneinfo/Europe/Stockholm /etc/localtime

# Set hardware clock to system time
hwclock --systohc

# Set hostname
echo Hostname > etc/hostname
# Edit hosts
nvim /etc/hosts
# When done, it should look something like this
# <ip-address>	<hostname.domain.org>	<hostname>
# 127.0.0.1		localhost.localdomain	localhost	Hostname
# ::1			localhost.localdomain	localhost	Hostname

# This is where you install your network manager of choice, for me, that is connman
# Miss this step and you'll have to chroot in again unless you got a wired connection
sudo pacman -S wpa-supplicant
# I need to install this beforehand as a wifi dependency for connman
sudo pacman -S connman

# If you are met with a invalid or corrupted package, execute:
pacman-key --list-sigs Lastname
# Find the appropriate user's key and delete it
pacman-key --delete XXXXXXXXXXXXXXXX
# Then rebuild the keyring
pacman-key --populate archlinux
# And then, try installing the network manager once more

# Once the manager is installed, you need to enable it with systemctl
# First find the name of the service with
systemctl list-unit-files
# And then enable it if it wasn't already
systemctl enable connman.service

# Create ramdisk environment
mkinitcpio -p linux
# You should get two warnings
# Basically nobody owns that kind of hardware, so no need to worry about it

# Set password
passwd

# Install grub and os prober
pacman -S grub os-prober
# Run grub-install on your boot drive
grub-install --target=i386-pc --recheck /dev/sdx
# If you recieve 'Installation finished. No error reported.' you're golden
# Create grub config
grub-mkconfig -o /boot/grub/grub.conf
# Here you'll get a warning 'Failed to connect to lvmetad.'
# This is because you ran grub from chroot
# Once again, no need to worry

# Now shutdown the pc
umount /dev/sdxy
exit
shutdown -P now

# Before turning it on, make sure you've changed the boot media to the drive you marked as bootable
# Remove all bootable discs, usbs, etc
# If everything works as it's supposed to, you'll now be able to log in as the user root and the password you provided

# Create your user account
useradd -m -g users -G wheel,storage,power -s /bin/bash temmel
# Set the password
passwd temmel

# Set up user rights
visudo
# Uncomment the line that looks like
# %wheel ALL=(ALL) ALL
# This allows all members of the wheel group to use all commands

# Now logout from the root account
exit
# Login with your new user, if you can run the following line everything works as intended
sudo pacman -Syyu

# From here, you'll want to import your dots
git clone https://github.com/atemmel/dotfiles.git
# Copy the contents
cp -R dotfiles/. .
rm -rf .git dotfiles

# Install basic software
sudo pacman -S i3-gaps rofi xorg xorg-xinit compton dunst mpd ncmpcpp

# Download and install aurman
git clone https://aur.archlinux.org/aurman.git
cd aurman
gpg --recv-keys 465022E743D71E39
makepkg -si

# Install more software
aurman -S python-pywal flameshot polybar pyenv


Todo: discord, scientifica, nerdfonts, urxvt resize font,
